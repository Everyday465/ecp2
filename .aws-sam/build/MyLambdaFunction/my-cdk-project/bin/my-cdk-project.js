#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//import all the stacks for deployment
const cdk = require("aws-cdk-lib");
const s3_bucket_stack_1 = require("../lib/s3-bucket-stack");
const rest_api_aws_stack_1 = require("../lib/rest-api-aws-stack");
const lambda_scheduler_stack_1 = require("../lib/lambda-scheduler-stack");
const sns_subscription_stack_1 = require("../lib/sns-subscription-stack");
const app = new cdk.App();
//new MyCdkProjectStack(app, 'MyCdkProjectStack');
//creating an s3 bucket stack
const s3_bucket_stack = new s3_bucket_stack_1.S3BucketStack(app, "s3Stack", {
    env: {
        account: process.env.CDK_DEFAULT_ACCOUNT,
        region: process.env.CDK_DEFAULT_REGION,
    },
});
const rest_api_aws_stack = new rest_api_aws_stack_1.RestApiAwsStack(app, "restApiStack", {
    env: {
        account: process.env.CDK_DEFAULT_ACCOUNT,
        region: process.env.CDK_DEFAULT_REGION,
    },
});
const lambda_scheduler_stack = new lambda_scheduler_stack_1.EventbridgeSchedulerStack(app, "eventBridgeStack", {
    env: {
        account: process.env.CDK_DEFAULT_ACCOUNT,
        region: process.env.CDK_DEFAULT_REGION,
    },
});
const sns_subscription_stack = new sns_subscription_stack_1.SnsEmailSubscriptionStack(app, 'SnsEmailSubscriptionStack');
//reusing assets
// const bucket = s3_bucket_stack.bucket;
// const restApi = rest_api_aws_stack.;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXktY2RrLXByb2plY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJteS1jZGstcHJvamVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxzQ0FBc0M7QUFDdEMsbUNBQW1DO0FBRW5DLDREQUF1RDtBQUN2RCxrRUFBNEQ7QUFDNUQsMEVBQTBFO0FBQzFFLDBFQUEwRTtBQUUxRSxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUMxQixrREFBa0Q7QUFFbEQsNkJBQTZCO0FBQzdCLE1BQU0sZUFBZSxHQUFHLElBQUksK0JBQWEsQ0FBQyxHQUFHLEVBQUMsU0FBUyxFQUFFO0lBQ3JELEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQjtRQUN4QyxNQUFNLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0I7S0FDdkM7Q0FDRixDQUFDLENBQUM7QUFFTCxNQUFNLGtCQUFrQixHQUFHLElBQUksb0NBQWUsQ0FBQyxHQUFHLEVBQUMsY0FBYyxFQUFFO0lBQ2pFLEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQjtRQUN4QyxNQUFNLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0I7S0FDdkM7Q0FDRixDQUFDLENBQUM7QUFFSCxNQUFNLHNCQUFzQixHQUFHLElBQUksa0RBQXlCLENBQUMsR0FBRyxFQUFDLGtCQUFrQixFQUFDO0lBQ2xGLEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQjtRQUN4QyxNQUFNLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0I7S0FDdkM7Q0FDRixDQUFDLENBQUM7QUFFSCxNQUFNLHNCQUFzQixHQUFHLElBQUksa0RBQXlCLENBQUMsR0FBRyxFQUFFLDJCQUEyQixDQUFDLENBQUM7QUFDL0YsZ0JBQWdCO0FBQ2hCLHlDQUF5QztBQUN6Qyx1Q0FBdUMiLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXHJcbi8vaW1wb3J0IGFsbCB0aGUgc3RhY2tzIGZvciBkZXBsb3ltZW50XHJcbmltcG9ydCAqIGFzIGNkayBmcm9tICdhd3MtY2RrLWxpYic7XHJcbmltcG9ydCB7IE15Q2RrUHJvamVjdFN0YWNrIH0gZnJvbSAnLi4vbGliL215LWNkay1wcm9qZWN0LXN0YWNrJztcclxuaW1wb3J0IHsgUzNCdWNrZXRTdGFjayB9IGZyb20gJy4uL2xpYi9zMy1idWNrZXQtc3RhY2snO1xyXG5pbXBvcnQgeyBSZXN0QXBpQXdzU3RhY2sgfSBmcm9tICcuLi9saWIvcmVzdC1hcGktYXdzLXN0YWNrJztcclxuaW1wb3J0IHsgRXZlbnRicmlkZ2VTY2hlZHVsZXJTdGFjayB9IGZyb20gJy4uL2xpYi9sYW1iZGEtc2NoZWR1bGVyLXN0YWNrJztcclxuaW1wb3J0IHsgU25zRW1haWxTdWJzY3JpcHRpb25TdGFjayB9IGZyb20gJy4uL2xpYi9zbnMtc3Vic2NyaXB0aW9uLXN0YWNrJztcclxuXHJcbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XHJcbi8vbmV3IE15Q2RrUHJvamVjdFN0YWNrKGFwcCwgJ015Q2RrUHJvamVjdFN0YWNrJyk7XHJcblxyXG4vL2NyZWF0aW5nIGFuIHMzIGJ1Y2tldCBzdGFja1xyXG5jb25zdCBzM19idWNrZXRfc3RhY2sgPSBuZXcgUzNCdWNrZXRTdGFjayhhcHAsXCJzM1N0YWNrXCIsIHtcclxuICAgIGVudjoge1xyXG4gICAgICBhY2NvdW50OiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9BQ0NPVU5ULFxyXG4gICAgICByZWdpb246IHByb2Nlc3MuZW52LkNES19ERUZBVUxUX1JFR0lPTixcclxuICAgIH0sXHJcbiAgfSk7XHJcblxyXG5jb25zdCByZXN0X2FwaV9hd3Nfc3RhY2sgPSBuZXcgUmVzdEFwaUF3c1N0YWNrKGFwcCxcInJlc3RBcGlTdGFja1wiLCB7XHJcbiAgZW52OiB7XHJcbiAgICBhY2NvdW50OiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9BQ0NPVU5ULFxyXG4gICAgcmVnaW9uOiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9SRUdJT04sXHJcbiAgfSxcclxufSk7XHJcblxyXG5jb25zdCBsYW1iZGFfc2NoZWR1bGVyX3N0YWNrID0gbmV3IEV2ZW50YnJpZGdlU2NoZWR1bGVyU3RhY2soYXBwLFwiZXZlbnRCcmlkZ2VTdGFja1wiLHtcclxuICBlbnY6IHtcclxuICAgIGFjY291bnQ6IHByb2Nlc3MuZW52LkNES19ERUZBVUxUX0FDQ09VTlQsXHJcbiAgICByZWdpb246IHByb2Nlc3MuZW52LkNES19ERUZBVUxUX1JFR0lPTixcclxuICB9LFxyXG59KTtcclxuXHJcbmNvbnN0IHNuc19zdWJzY3JpcHRpb25fc3RhY2sgPSBuZXcgU25zRW1haWxTdWJzY3JpcHRpb25TdGFjayhhcHAsICdTbnNFbWFpbFN1YnNjcmlwdGlvblN0YWNrJyk7XHJcbi8vcmV1c2luZyBhc3NldHNcclxuLy8gY29uc3QgYnVja2V0ID0gczNfYnVja2V0X3N0YWNrLmJ1Y2tldDtcclxuLy8gY29uc3QgcmVzdEFwaSA9IHJlc3RfYXBpX2F3c19zdGFjay47XHJcblxyXG4gICAgIl19